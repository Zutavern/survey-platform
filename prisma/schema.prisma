// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  surveys   Survey[]
  responses Response[]
}

model Survey {
  id          String   @id @default(cuid())
  title       String
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  authorId    String
  author      User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  questions   Question[]
  responses   Response[]
}

model Question {
  id       String   @id @default(cuid())
  text     String
  type     QuestionType
  required Boolean  @default(false)
  order    Int
  
  // Relations
  surveyId String
  survey   Survey     @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  options  Option[]
  answers  Answer[]
}

model Option {
  id         String @id @default(cuid())
  text       String
  order      Int
  
  // Relations
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  answers    Answer[]
}

model Response {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  // Relations
  surveyId  String
  survey    Survey   @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  answers   Answer[]
}

model Answer {
  id         String @id @default(cuid())
  textAnswer String?
  
  // Relations
  responseId String
  response   Response @relation(fields: [responseId], references: [id], onDelete: Cascade)
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  optionId   String?
  option     Option?  @relation(fields: [optionId], references: [id], onDelete: SetNull)
}

enum QuestionType {
  TEXT
  MULTIPLE_CHOICE
  CHECKBOX
  RATING
}
